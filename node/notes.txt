Install node
============
Use nvm
https://github.com/coreybutler/nvm-windows

C:\Users\steve\AppData\Local\nvm
C:\nvm4w\nodejs

nvm version
nvm install lts - latest node version
nvm use <version>
node -v
npm -v



2 primary ways to use node to evaluate code

Node Shell
==========
aka Node REPL - Read-Eval-Print-Loop
invoke by typing node
ctrl+D to exit

JS files
========
node <mytest.js>


Node.js globals
===============
global
------
In a browser the window object acts as a global
Node has similar object called global

console
-------
.log(msg) : msg to stdout
.warn(msg) : msg to stderr
.time(label) : marks a timestamp
.timeEnd(label) : elapsed time since .time was called
.assert(cond, msg) : Throw AssertionFailure if cind evaluates to false

process
-------
.exit
.env
.cwd : working directory

packages/modules
================
nodemon
-------
nodemon monitors code changes so no need to manually restart server
npm i -D nodemon
add to package.json:
  "scripts": {
    "start": "node index",
    "dev": "nodemon index"
  },
invoke with npm run dev

moment - handles dates and times
------
npm i moment

uuid - generates random unique ids
----
npm i uuid

handlebars - templating
----------
npm install express-handlebars

