Single source of truth for application state.
Built on rxjs
ngxs actions are asynchronous
Supports Observables and Promises
npm install @ngxs/store --save

4 major concepts

Store: Global state container, action dispatcher and selector
Actions: Class describing the action to take and its associated metadata
State: Class definition of the state
Selects: State slice selectors

app.module.ts
=============
    NgxsModule.forRoot([], {
      developmentMode: !environment.production
    })

Array used to define our states

Create 1st state
- just a new .ts file

// defines slice of global state
// replace <any> with appropriate interface

export Interface TodoStateModel {
  items ToDoModel[]
}
//@State<any>({
@State<TodoStateModel>({
  name: 'todo',
  defaults: {
    items:[]
  }
})
@Injectable()
export class MyState{}


{
  // todo slice
  todo: [
    {
        id: 1,
        isDone: false,
        name: 'buy milk'
    }
    ...
  ],

  // shopping slice
  shopping: [
    {
        id: 1,
        name: 'shopping item 1'
    }
    ...
  ]
}
